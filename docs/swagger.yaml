definitions:
  common.MetaData:
    properties:
      links:
        items:
          additionalProperties:
            type: string
          type: object
        type: array
      page:
        type: integer
      page_count:
        type: integer
      per_page:
        type: integer
      total_count:
        type: integer
    type: object
  common.ResponseDTO:
    properties:
      _metadata:
        $ref: '#/definitions/common.MetaData'
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
  unstructured.Unstructured:
    properties:
      object:
        additionalProperties: true
        description: |-
          Object is a JSON compatible map with string, float, int, bool, []interface{}, or
          map[string]interface{}
          children.
        type: object
    type: object
  v1.CompanyMetadata:
    properties:
      labels:
        additionalProperties:
          type: string
        type: object
      number_of_concurrent_process:
        type: integer
      total_process_per_day:
        type: integer
    type: object
  v1.LogEvent:
    properties:
      claim:
        type: integer
      createdAt:
        type: string
      footmark:
        type: string
      log:
        type: string
      processId:
        type: string
      step:
        type: string
    type: object
  v1.Pipeline:
    properties:
      _metadata:
        $ref: '#/definitions/v1.PipelineMetadata'
      api_version:
        type: string
      label:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      option:
        $ref: '#/definitions/v1.PipelineApplyOption'
      process_id:
        type: string
      steps:
        items:
          $ref: '#/definitions/v1.Step'
        type: array
    type: object
  v1.PipelineApplyOption:
    properties:
      purging:
        type: string
    type: object
  v1.PipelineMetadata:
    properties:
      company_id:
        type: string
      company_metadata:
        $ref: '#/definitions/v1.CompanyMetadata'
    type: object
  v1.PipelineProcessEvent:
    properties:
      company_id:
        type: string
      data:
        additionalProperties: true
        type: object
      process_id:
        type: string
    type: object
  v1.Process:
    properties:
      app_id:
        type: string
      branch:
        type: string
      commit_id:
        type: string
      company_id:
        type: string
      created_at:
        type: string
      data:
        additionalProperties: true
        type: object
      process_id:
        type: string
      repository_id:
        type: string
    type: object
  v1.ProcessLifeCycleEvent:
    properties:
      agent:
        type: string
      claim:
        type: integer
      created_at:
        type: string
      next:
        items:
          type: string
        type: array
      pipeline:
        $ref: '#/definitions/v1.Pipeline'
      process_id:
        type: string
      status:
        type: string
      step:
        type: string
      step_type:
        type: string
      trigger:
        type: string
    type: object
  v1.ProcessLifeCycleEventList:
    properties:
      events:
        items:
          $ref: '#/definitions/v1.ProcessLifeCycleEvent'
        type: array
    type: object
  v1.Step:
    properties:
      arg_data:
        additionalProperties:
          type: string
        type: object
      descriptors:
        items:
          $ref: '#/definitions/unstructured.Unstructured'
        type: array
      env_data:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      next:
        items:
          type: string
        type: array
      params:
        additionalProperties:
          type: string
        type: object
      status:
        type: string
      trigger:
        type: string
      type:
        type: string
    type: object
info:
  contact: {}
  description: Klovercloud-ci-event-bank API
  title: Klovercloud-ci-event-bank API
paths:
  /api/v1/logs:
    post:
      consumes:
      - application/json
      description: Stores logs
      parameters:
      - description: LogEvent Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.LogEvent'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.ResponseDTO'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Save log
      tags:
      - Log
  /api/v1/pipelines/{commitId}:
    get:
      description: Gets pipeline by process id
      parameters:
      - description: processId
        in: path
        name: commitId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
      summary: Get by process id
      tags:
      - Pipeline
  /api/v1/pipelines/{processId}:
    get:
      description: Gets logs by pipeline processId
      parameters:
      - description: Pipeline ProcessId
        in: path
        name: processId
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Record count
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
      summary: Get Logs
      tags:
      - Pipeline
  /api/v1/process_life_cycle_events:
    get:
      description: Pulls auto trigger enabled steps
      parameters:
      - description: Agen name
        in: path
        name: agent
        required: true
        type: string
      - description: Pull size
        in: path
        name: count
        required: true
        type: integer
      - description: Step type [BUILD, DEPLOY]
        in: path
        name: step_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.ProcessLifeCycleEvent'
                  type: array
              type: object
      summary: Pull Steps
      tags:
      - ProcessLifeCycle
    post:
      consumes:
      - application/json
      description: Stores process lifecycle event
      parameters:
      - description: ProcessLifeCycleEventList Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.ProcessLifeCycleEventList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.ResponseDTO'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Save process lifecycle event
      tags:
      - ProcessLifeCycle
    put:
      description: Update reclaim step
      parameters:
      - description: Step name
        in: path
        name: step
        required: true
        type: string
      - description: Process id
        in: path
        name: processId
        required: true
        type: string
      - description: Process life cycle step status
        in: path
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Update Steps
      tags:
      - ProcessLifeCycle
  /api/v1/processes:
    get:
      description: Get Process List or count process
      parameters:
      - description: Company Id
        in: query
        name: companyId
        required: true
        type: string
      - description: Repository Id
        in: query
        name: repositoryId
        type: string
      - description: App Id
        in: query
        name: appId
        type: string
      - description: Commit Id
        in: query
        name: appId
        type: string
      - description: Operation[countTodaysProcessByCompanyId]
        in: query
        name: operation
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1.Process'
                  type: array
              type: object
      summary: Get Process List or count process
      tags:
      - Process
    post:
      consumes:
      - application/json
      description: Stores process
      parameters:
      - description: Process Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.Process'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.ResponseDTO'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Save process
      tags:
      - Process
  /api/v1/processes/{processId}:
    get:
      description: Get Process by Id
      parameters:
      - description: ProcessId
        in: path
        name: processId
        required: true
        type: string
      - description: Company Id
        in: query
        name: companyId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Get Process by Id
      tags:
      - Process
  /api/v1/processes/{processId}/logs:
    get:
      description: Gets logs by processId
      parameters:
      - description: Pipeline ProcessId
        in: path
        name: processId
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Record count
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
      summary: Get Logs
      tags:
      - Process
  /api/v1/processes/{processId}/steps/{step}:
    get:
      description: Get Footmark List
      parameters:
      - description: Process Id
        in: path
        name: processId
        required: true
        type: string
      - description: step name
        in: path
        name: step
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
      summary: Get Footmark List
      tags:
      - Process
  /api/v1/processes/{processId}/steps/{step}/footmarks/{footmark}/logs:
    get:
      description: Gets logs by processId, step, and footmark
      parameters:
      - description: Pipeline ProcessId
        in: path
        name: processId
        required: true
        type: string
      - description: Pipeline step
        in: path
        name: step
        required: true
        type: string
      - description: footmarks
        in: path
        name: footmark
        required: true
        type: string
      - description: claims
        in: query
        name: claims
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Record count
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.ResponseDTO'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
      summary: Get Logs
      tags:
      - Process
  /api/v1/processes_events:
    post:
      consumes:
      - application/json
      description: Stores Pipeline process event
      parameters:
      - description: PipelineProcessEvent Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.PipelineProcessEvent'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.ResponseDTO'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ResponseDTO'
      summary: Save Pipeline process event
      tags:
      - ProcessEvent
swagger: "2.0"
